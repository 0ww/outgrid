@import "reset";
@import "align";
@import "spacing";
@import "media";
@import "color";

$break-medium: 720px;
$break-large: 1024px;

/* ----------  Container  ---------- */

@mixin grid {
  display: grid;
}

@mixin container-basics {
  @include grid();
  width: 100%;
  height: 100%;
}

.d-grid {
  @include grid();
}

.container {
  @include container-basics();

  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(12, 1fr);
}

.container-percentage {
  @include container-basics();

  grid-template-columns: repeat(12, round(percentage(1/12)));
  grid-template-rows: repeat(12, round(percentage(1/12)));
}

.container-auto-rows {
  @include container-basics();
  grid-auto-rows: auto;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(12, 1fr);
}

.auto-rows {
  grid-auto-rows: auto;
}

// #region autofit & autofill
@for $i from 1 through 20 {
  .container-autofit-#{$i*50} {
    grid-template-columns: repeat(auto-fit, minmax(#{$i*50}px,1fr));
  }

  .container-autofill-#{$i*50} {
    grid-template-columns: repeat(auto-fill, minmax(#{$i*50}px,1fr));
  }
}

@for $i from 1 through 20 {
  .container-autofit-sm-#{$i*50} {
    grid-template-columns: repeat(auto-fit, minmax(#{$i*50}px,1fr));
  }

  .container-autofill-sm-#{$i*50} {
    grid-template-columns: repeat(auto-fill, minmax(#{$i*50}px,1fr));
  }
}
// #endregion autofit & autofill

// #region containers/areas combinations {x}-{y} by 12
@for $i from 1 through 12 {
  @for $j from 1 through 12 {
    .container-#{$i}-#{$j} {
      @include container-basics();

      grid-template-columns: repeat(#{$i}, 1fr);
      grid-template-rows: repeat(#{$j}, 1fr);
    }

    .container-sm-#{$i}-#{$j} {
      @include container-basics();

      grid-template-columns: repeat(#{$i}, 1fr);
      grid-template-rows: repeat(#{$j}, 1fr);
    }

    .container-percentage-#{$i}-#{$j} {
      @include container-basics();
    
      grid-template-columns: repeat(#{$i}, round(percentage(1/$i)));
      grid-template-rows: repeat(#{$j}, round(percentage(1/$j)));
    }

    .area-#{$i}-#{$j} {
      grid-column: auto / span #{$i};
      grid-row: auto / span #{$j};
    }

    .area-sm-#{$i}-#{$j} {
      grid-column: auto / span #{$i};
      grid-row: auto / span #{$j};
    }
  }
}
// #endregion combinations {x}-{y} by 12

// #region columns/rows-{start}
// columns col-{} ////  rows row-{}
@for $i from 1 through 12 {
  .col-start-#{$i} {
    grid-column-start: #{$i};
  }
  
  .col-start-sm-#{$i} {
    grid-column-start: #{$i};
  }

  .row-start-#{$i} {
    grid-row-start: #{$i};
  }

  .row-start-sm-#{$i} {
    grid-row-start: #{$i};
  }
}
// #endregion columns/rows-{start}

// #region columns/rows-{end}
// columns col-{} ////  rows row-{}
@for $i from 1 through 12 {
  .col-end-#{$i} {
    grid-column-end: #{$i};
  }
  
  .col-end-sm-#{$i} {
    grid-column-end: #{$i};
  }

  .row-end-#{$i} {
    grid-row-end: #{$i};
  }

  .row-end-sm-#{$i} {
    grid-row-end: #{$i};
  }
}
// #endregion columns/rows-{end}

// #region col/row {start}-{end}
// columns col-{} ////  rows row-{}
@for $i from 1 through 12 {
  @for $j from 1 through 12 {
    .col-#{$i}-#{$j} {
      grid-column-start: #{$i};
      grid-column-end: #{$j};
    }
    
    .col-sm-#{$i}-#{$j} {
      grid-column-start: #{$i};
      grid-column-end: #{$j};
    }
    
    .row-#{$i}-#{$j} {
      grid-row-start: #{$i};
      grid-row-end: #{$j};
    }
    
    .row-sm-#{$i}-#{$j} {
      grid-row-start: #{$i};
      grid-row-end: #{$j};
    }
  }
}
// #endregion columns/rows-{end}

// #region Media Queries
@media screen and (min-width: $break-medium) {
  @for $i from 1 through 20 {
    .container-autofit-md-#{$i*50} {
      @include container-basics();
      grid-template-columns: repeat(auto-fit, minmax(#{$i*50}px,1fr));
    }
  
    .container-autofill-md-#{$i*50} {
      
      grid-template-columns: repeat(auto-fill, minmax(#{$i*50}px,1fr));
    }
  }  
  
  //   columns/rows col/row-md-{}
  @for $i from 1 through 12 {
    .col-md-#{$i} {
      grid-column-start: #{$i};
    }

    .row-md-#{$i} {
      grid-row-start: #{$i};
    }
  }

  // columns combination col-md-{start}-{span}
  @for $i from 1 through 12 {
    @for $j from 1 through 12 {
      .area-md-#{$i}-#{$j} {
        grid-column: auto / span #{$i};
        grid-row: auto / span #{$j};
      }

      .container-md-#{$i}-#{$j} {
        @include container-basics();
  
        grid-template-columns: repeat(#{$i}, 1fr);
        grid-template-rows: repeat(#{$j}, 1fr);
      }
    }
  }
}

@media screen and (min-width: $break-large) {
  @for $i from 1 through 20 {
    .container-autofit-lg-#{$i*50} {
      @include container-basics();
      grid-template-columns: repeat(auto-fit, minmax(#{$i*50}px,1fr));
    }
  
    .container-autofill-lg-#{$i*50} {
      @include container-basics();
      grid-template-columns: repeat(auto-fill, minmax(#{$i*50}px,1fr));
    }
  }  
  
  //   columns/rows col/row-md-{}
  @for $i from 1 through 12 {
    .col-lg-#{$i} {
      grid-column-start: #{$i};
    }

    .row-lg-#{$i} {
      grid-row-start: #{$i};
    }
  }

  // columns combination col-md-{start}-{span}
  @for $i from 1 through 12 {
    @for $j from 1 through 12 {
      .area-lg-#{$i}-#{$j} {
        grid-column: auto / span #{$i};
        grid-row: auto / span #{$j};
      }

      .container-lg-#{$i}-#{$j} {
        @include container-basics();
  
        grid-template-columns: repeat(#{$i}, 1fr);
        grid-template-rows: repeat(#{$j}, 1fr);
      }
    }
  }
}
// #endregion Media Queries
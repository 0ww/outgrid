@import "align";
@import "spacing";
@import "media";
@import "color";

$break-medium: 720px;
$break-large: 1024px;

/* ----------  Container  ---------- */

.d-grid {
  display: grid;
}

@mixin container-basics {
  display: grid;
  width: 100%;
  height: 100%;
}

.container {
  @include container-basics();

  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(12, 1fr);
}

.container-auto-rows {
  @include container-basics();
  grid-auto-rows: auto;
  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(12, 1fr);
}

@for $i from 1 through 20 {
  .container-autofit-#{$i*50} {
    grid-template-columns: repeat(auto-fit, minmax(#{$i*50}px,1fr));
  }

  .container-autofill-#{$i*50} {
    grid-template-columns: repeat(auto-fill, minmax(#{$i*50}px,1fr));
  }
}

@for $i from 1 through 20 {
  .container-autofit-sm-#{$i*50} {
    grid-template-columns: repeat(auto-fit, minmax(#{$i*50}px,1fr));
  }

  .container-autofill-sm-#{$i*50} {
    grid-template-columns: repeat(auto-fill, minmax(#{$i*50}px,1fr));
  }
}

// combinations {x}-{y}
@for $i from 1 through 12 {
  @for $j from 1 through 12 {
    .container-#{$i}-#{$j} {
      @include container-basics();

      grid-template-columns: repeat(#{$i}, 1fr);
      grid-template-rows: repeat(#{$j}, 1fr);
    }

    .col-#{$i}-#{$j} {
      grid-column: #{$i}/span #{$j};
      grid-row: span 12;
    }

    .col-sm-#{$i}-#{$j} {
      grid-column: #{$i}/span #{$j};
      grid-row: span 12;
    }

    .row-#{$i}-#{$j} {
      grid-row: #{$i}/span #{$j};
      grid-column: span 12;
    }

    .row-sm-#{$i}-#{$j} {
      grid-row: #{$i}/span #{$j};
      grid-column: span 12;
    }

    .area-#{$i}-#{$j} {
      grid-column: span #{$i};
      grid-row: span #{$j};
    }
  }
}

/* ----------  Default Columns and Rows ---------- */

//   columns col-{} ////  rows row-{}
@for $i from 1 through 12 {
  .col-#{$i} {
    grid-column: span #{$i};
  }

  .row-#{$i} {
    grid-row: span #{$i};
  }

  .col-sm-#{$i} {
    grid-column: span #{$i};
  }

  .row-sm-#{$i} {
    grid-row: span #{$i};
  }
}

/* ----------  Media Queries  ---------- */

@media screen and (min-width: $break-medium) {
  @for $i from 1 through 20 {
    .container-autofit-md-#{$i*50} {
      grid-template-columns: repeat(auto-fit, minmax(#{$i*50}px,1fr));
    }
  
    .container-autofill-md-#{$i*50} {
      grid-template-columns: repeat(auto-fill, minmax(#{$i*50}px,1fr));
    }
  }  
  
  //   columns col-md-{}
  @for $i from 1 through 12 {
    .col-md-#{$i} {
      grid-column: span #{$i};
      grid-row: span 12;
    }

    .row-md-#{$i} {
      grid-row: span #{$i};
      grid-column: span 12;
    }
  }

  // columns combination col-md-{start}-{span}
  @for $i from 1 through 12 {
    @for $j from 1 through 12 {
      .col-md-#{$i}-#{$j} {
        grid-column: #{$i}/span #{$j};
        grid-row: span 12;
      }

      .row-md-#{$i}-#{$j} {
        grid-row: #{$i}/span #{$j};
        grid-column: span 12;
      }
    }
  }
}

@media screen and (min-width: $break-large) {
  @for $i from 1 through 20 {
    .container-autofit-lg-#{$i*50} {
      grid-template-columns: repeat(auto-fit, minmax(#{$i*50}px,1fr));
    }
  
    .container-autofill-lg-#{$i*50} {
      grid-template-columns: repeat(auto-fill, minmax(#{$i*50}px,1fr));
    }
  }
  
  //   columns col-lg-{}
  @for $i from 1 through 12 {
    .col-lg-#{$i} {
      grid-column: span #{$i};
      grid-row: span 12;
    }

    .row-lg-#{$i} {
      grid-row: span #{$i};
      grid-column: span 12;
    }
  }

  // columns combination col-lg-{start}-{span}
  @for $i from 1 through 12 {
    @for $j from 1 through 12 {
      .col-lg-#{$i}-#{$j} {
        grid-column: #{$i}/span #{$j};
        grid-row: span 12;
      }

      .row-lg-#{$i}-#{$j} {
        grid-row: #{$i}/span #{$j};
        grid-column: span 12;
      }
    }
  }
}

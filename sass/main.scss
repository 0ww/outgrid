@use 'colors';

@mixin container-basics {
  display: grid;
  width: 100%;
  height: 100%;
}

.container {
  @include container-basics();

  grid-template-columns: repeat(12, 1fr);
  grid-template-rows: repeat(12, 1fr);
}

// containers
@for $i from 1 through 12 {
  @for $j from 1 through 12 {
    .container-#{$i}-#{$j} {
      @include container-basics();

      grid-template-columns: repeat(#{$i}, 1fr);
      grid-template-rows: repeat(#{$j}, 1fr);
    }
  }
}

//   columns col-{}
@for $i from 1 through 12 {
  .col-#{$i} {
    grid-column: span #{$i} !important;
    grid-row: span 12;
  }
}

// columns combination col-{start}-{span}
@for $i from 1 through 12 {
  @for $j from 1 through 12 {
    .col-#{$i}-#{$j} {
      grid-column: #{$i}/span #{$j} !important;
      grid-row: span 12;
    }
  }
}

//   rows row-{}
@for $i from 1 through 12 {
  .row-#{$i} {
    grid-row: span #{$i} !important;
    grid-column: span 12;
  }
}

// columns combination row-{start}-{span}
@for $i from 1 through 12 {
  @for $j from 1 through 12 {
    .row-#{$i}-#{$j} {
      grid-row: #{$i}/span #{$j} !important;
      grid-column: span 12;
    }
  }
}

// areas
@for $i from 1 through 12 {
  @for $j from 1 through 12 {
    .area-#{$i}-#{$j} {
      grid-column: span #{$i};
      grid-row: span #{$j};
    }
  }
}
